#!/bin/sh

if [ ! -f "deps.edn" ]
then
    echo "This script must be run from the root of the project." >&2
    exit 1
fi

root_path=${PWD}

name=$(scripts/name)
version=$(scripts/version)

packages=$(${root_path}/scripts/get-all-uberjar-packages |
    cat - "${root_path}/build/loaded-packages" | sort -u)
num_packages=$(printf '%s' "${packages}" | wc -l)
echo "Recognized ${num_packages} packages"
sleep 2

# https://www.graalvm.org/22.0/reference-manual/native-image/Agent/
#-H:+AllowIncompleteClasspath \
#--static \
#--no-fallback \
#--libc=musl \
#-H:CCompilerOption=-Wl,-z,stack-size=2097152 \
#--link-at-build-time \
# the `--allow-incomplete-classpath` option is apparently needed
# for the H2 dependency, see here:
# https://github.com/clj-easy/graal-config
verbatim="
--verbose \
--enable-url-protocols=https,http \
--report-unsupported-elements-at-runtime \
--allow-incomplete-classpath \
--install-exit-handlers \
-H:+ReportExceptionStackTraces \
-H:+PrintClassInitialization \
-Dfile.encoding=UTF-8 \
-J-Dclojure.compiler.direct-linking=true \
-J-Dclojure.spec.skip-macros=true \
-H:-CheckToolchain \
-H:+InlineBeforeAnalysis \
-H:Log=registerResource: \
-H:IncludeResources=.*/org/sqlite/.*|org/sqlite/.*|.*/sqlite-jdbc.properties \
-H:+JNI \
-H:Name=${name} \
-H:-UseServiceLoaderFeature \
-jar target/${name}-${version}-standalone.jar \
-J-Xmx4G"

exceptions="\
"
exceptions=""
for i in ${verbatim}
do
    arguments="${arguments} ${i}"
done
explicit_pkgs="\
org.graalvm.nativebridge.jni.JNIExceptionWrapperEntryPoints \
java.math.BigInteger \
java.math.BigDecimal
"
for i in ${explicit_pkgs}
do
    arguments="${arguments} --initialize-at-build-time=${i}"
done
for i in ${packages}
do
    arguments="${arguments} --initialize-at-build-time=${i}"
done
for i in ${exceptions}
do
    arguments="${arguments} --initialize-at-run-time=${i}"
done
native-image ${arguments} "${@}"
